#
# shared common logic for compile-service scripts
#

cmd_adduser=/usr/sbin/useradd
cmd_rmuser=/usr/sbin/userdel
compiler_root=/opt/compile
version_file=bin/version

DHOME=/mnt/sandbox

function gen_token() {
	LC_ALL=C tr -dc a-z0-9 < /dev/urandom | head -c 16 ${1:16}
echo
}

function create_sandbox() {
	sandbox_id=$1
	kit_name=$2
	source_url=$3

	$cmd_adduser $sandbox_id -b $DHOME -m --no-user-group -g sandbox --shell /bin/bash

	echo $kit_name >${DHOME}/$sandbox_id/.compile
	echo $source_url >${DHOME}/$sandbox_id/.source_url

	# setup ssh-key
	mkdir -p ${DHOME}/$sandbox_id/.ssh
	echo $rsa_key >${DHOME}/$sandbox_id/.ssh/authorized_keys

	chmod 0700 ${DHOME}/$sandbox_id
}

function sync_source() {
	sandbox_id=$1
	source_url=`cat ${DHOME}/$sandbox_id/.source_url`

	# process http sources
	#
	# FIXME temporary 'sync' only; we should really support only GIT based updates
	if [[ $source_url == http* ]]
	then 
		curl -s -o /tmp/${sandbox_id}.tar.gz $source_url

		rm -Rf ${DHOME}/$sandbox_id/*
		tar xvfz /tmp/${sandbox_id}.tar.gz -C ${DHOME}/$sandbox_id/ 1>${DHOME}/$sandbox_id/.extracted
	fi

	# FIXME add GIT sync support (handle keys)
}

function compile_kit_exec() {
	sandbox_id=$1
	command=$2

	if [ ! -d ${DHOME}/$sandbox_id ]
	then
		echo "Sandbox $sandbox_id does not exists."
		exit 404
	fi

	kit_name=`cat ${DHOME}/$sandbox_id/.compile`

	if [ -x "${compiler_root}/${kit_name}/bin/${command}" ]
	then
		current_dir=`pwd`
		cd ${DHOME}/$sandbox_id

		su $sandbox_id -c "${compiler_root}/${kit_name}/bin/${command} $3 $4"		

		cd $current_dir

		if [ ! $command == "destroy" ]
		then
			sync_source $sandbox_id
		fi
	else
		echo "Invalid command=$command for kit=$kit_name"
		exit 405
	fi	
}

function destroy_sandbox() {
	$cmd_rmuser -f $1 2>/dev/null
	rm -Rf ${DHOME}/$1
}